1. Create a new repository on GitHub.

2. Open Git Bash.

3. Change the current working directory to your local project.

4. Initialize the local directory as a Git repository.
 $ git init

5. Add the files in your new local repository. This stages them for the first commit.
 $ git add .

6. Commit the files that you've staged in your local repository.
 $ git commit -m "First commit"

7. At the top of your GitHub repository's Quick Setup page, click to copy the remote repository URL.

8. In the Command prompt, add the URL for the remote repository where your local repository will be pushed.
 $ git remote add origin <remote repository URL>
 # Sets the new remote
 $ git remote -v
 # Verifies the new remote URL

9. Push the changes in your local repository to GitHub if there is a remote branch called master (or main if that's what you're using)
 $ git push origin master

10. Otherwise you will have to name local branch first by
 $ git branch -m <new_name>
and then push it to add a new branch called <new_name>
 $ git push origin -u <new_name>

******************************************************************************************

Gendac projects - Guide
Get latest changes from others:
- fetch: Download latest changes from remote repo
- merge: Apply fetched changes to own local branch

***pull: Combines "fetch" and "merge" into one command
	- git status: make sure that you don't have any staged or unstaged changes
	  Git won't let you merge changes if you have anything staged for the next commit.
	- git fetch
	- git pull
  
WHEN YOU WANT TO MAKE CHANGES:
1. Create a branch:
	- git checkout -b sprint101/WA/40850/BuildTheWrapperView
	
2. MAKE YOUR CHANGES

3. Commit your changes:
	- Terminal: git commit -m "Add your message here"
  
  - On VS2019: Team Explorer > Changes > Review your changes & Click + (to Stage All)
	- Add a comment of what you changed
	- Press "Commit Staged" button
	
4. Push your changes:
	- git push --set-upstream origin sprint101/WA/40850/BuildTheWrapperView
	- git status 
		To make sure on which branch you are, 
		whether your branch is up to date, 
		if you have anything to commit, and 
		if your working tree is clean

WHEN YOU'VE COMPLETED A TASK:
1. Create a pull request
2. Fill in: Title, Description, Reviewers and Work_items_to_link
3. git status: To orientate yourself
4. git checkout master: Switch to master branch
5. git fetch
6. git pull: Fastforward to current state
